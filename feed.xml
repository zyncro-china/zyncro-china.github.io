<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-09-17T02:09:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>edit require gem in vim</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/17/edit-require-gem-in-vim/"/>
    <id>http://blog.url.com/2014/09/17/edit-require-gem-in-vim/</id>
    <published>2014-09-17T02:09:00Z</published>
    <updated>2014-09-17T11:02:10+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;如何快速看某个rubygem的代码&lt;/h2&gt;

&lt;p&gt;在console下，可以安装gem-browse,用命令gem open
sinatra,就会进入编辑器看这个gem的代码。&lt;/p&gt;

&lt;h2&gt;在vim看require的gem&lt;/h2&gt;

&lt;p&gt;可以利用gem-browse，用以下的mapping进入光标下require gem的代码&lt;/p&gt;
&lt;pre class="highlight viml"&gt;
nnoremap &lt;span class="k"&gt;gr&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;execute &lt;span class="s2"&gt;&amp;quot;:tabedit &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gem open -e echo &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; expand&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 

&lt;/pre&gt;
&lt;p&gt;如果需要和Gemfile里的版本相同，需要改用bundle show命令。&lt;/p&gt;
&lt;pre class="highlight viml"&gt;
nnoremap &lt;span class="k"&gt;gr&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;execute &lt;span class="s2"&gt;&amp;quot;:tabedit &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bundle show &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; expand&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 

&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>alignment for ruby symbol in vim</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/16/alignment-for-ruby-symbol-in-vim/"/>
    <id>http://blog.url.com/2014/09/16/alignment-for-ruby-symbol-in-vim/</id>
    <published>2014-09-16T12:25:00Z</published>
    <updated>2014-09-16T21:17:14+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;在编辑器里做代码对齐&lt;/h2&gt;

&lt;p&gt;为了提高阅读性，
应尽量使其美观，对齐是其中一种方式。ruby中的symbol使用广泛，为了对其他们，需要使用一个vim插件Tabular&lt;/p&gt;

&lt;h2&gt;symbol in ruby1.8&lt;/h2&gt;

&lt;p&gt;使用下面key mapping，可以对齐ruby1.8的symbol&lt;/p&gt;
&lt;pre class="highlight viml"&gt;
vmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;Tabularize &lt;span class="sr"&gt;/:/&lt;/span&gt;r1c0l0&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;:&lt;/span&gt;Tabularize &lt;span class="sr"&gt;/=&amp;gt;/&lt;/span&gt;l1c1l0&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;
&lt;span class="c1"&gt;#before alignment&lt;/span&gt;
&lt;span class="n"&gt;mymethod&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:a&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:sdfds&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:fsd&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;#after alignment&lt;/span&gt;
&lt;span class="n"&gt;mymethod&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:a&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="ss"&gt;:c&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="ss"&gt;:sdfds&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="ss"&gt;:fsd&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;/pre&gt;
&lt;h2&gt;symbol in ruby1.9&lt;/h2&gt;

&lt;p&gt;使用下面key mapping，可以对齐ruby1.9以后的symbol&lt;/p&gt;
&lt;pre class="highlight viml"&gt;
vmap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;Tabularize &lt;span class="sr"&gt;/:/&lt;/span&gt;r0c1l0&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;
&lt;span class="c1"&gt;#before alignment&lt;/span&gt;
&lt;span class="n"&gt;mymethod&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;a: &lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;bd: &lt;/span&gt;&lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;ccccc: &lt;/span&gt;&lt;span class="mi"&gt;43434&lt;/span&gt;

&lt;span class="c1"&gt;#after alignment&lt;/span&gt;
&lt;span class="n"&gt;mymethod&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;a: &lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;bd: &lt;/span&gt;&lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="ss"&gt;ccccc: &lt;/span&gt;&lt;span class="mi"&gt;43434&lt;/span&gt;

&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>prawnpdf</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/13/prawnpdf/"/>
    <id>http://blog.url.com/2014/09/13/prawnpdf/</id>
    <published>2014-09-13T03:30:00Z</published>
    <updated>2014-09-14T18:43:08+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Prawn&lt;/h2&gt;

&lt;p&gt;Prawn是用于生成pdf的ruby库。了解它的使用方法它的最快途径是看它的manual&lt;/p&gt;

&lt;h2&gt;Manual的内容&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Basic concepts&lt;/li&gt;
&lt;li&gt;Graphics&lt;/li&gt;
&lt;li&gt;Text&lt;/li&gt;
&lt;li&gt;Bounding box&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Table&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Documents and page options&lt;/li&gt;
&lt;li&gt;Outline&lt;/li&gt;
&lt;li&gt;Repeatable content&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Basic Concepts&lt;/h3&gt;

&lt;p&gt;这部分包括&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creation&lt;/li&gt;
&lt;li&gt;Origin&lt;/li&gt;
&lt;li&gt;Cursor&lt;/li&gt;
&lt;li&gt;Other cursor helper&lt;/li&gt;
&lt;li&gt;Adding pages&lt;/li&gt;
&lt;li&gt;Measurement&lt;/li&gt;
&lt;li&gt;View&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Creation&lt;/h4&gt;

&lt;p&gt;有3种方式&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="c1"&gt;# Assignment&lt;/span&gt;
&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Prawn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Document&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;
&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="nf"&gt;.text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="nf"&gt;.render_file&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;assignment.pdf&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Implicit Block&lt;/span&gt;
&lt;span class="no"&gt;Prawn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Document&lt;/span&gt;&lt;span class="nf"&gt;.generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;implicit.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="c1"&gt;# Explicit Block&lt;/span&gt;
&lt;span class="no"&gt;Prawn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Document&lt;/span&gt;&lt;span class="nf"&gt;.generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;explicit.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="nf"&gt;.text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h4&gt;Origin&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;document的坐标起点[0,0]是左下角&lt;/li&gt;
&lt;li&gt;bouncing box是用于插入内容的边框,注意它位置的坐标是位于它的左上角&lt;/li&gt;
&lt;li&gt;每个文档都至少有一个bouncing box,就是margin box&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面代码画出文档坐标，bouncing box边框，以及在两个原点画圈&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;stroke_axis&lt;/span&gt;
&lt;span class="n"&gt;stroke_circle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;bounding_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:width&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:height&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;stroke_bounds&lt;/span&gt;
  &lt;span class="n"&gt;stroke_circle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;/pre&gt;
&lt;h4&gt;Cursor&lt;/h4&gt;

&lt;p&gt;Cursor指定插入内容的位置，从文档的左上角开始往下&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;stroke_axis&lt;/span&gt;

&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;the cursor is here: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;now it is here: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;move_down&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;on the first move the cursor went down to: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;move_up&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;on the second move the cursor went up to: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;move_cursor_to&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;on the last move the cursor went directly to: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;h4&gt;其他 Cursor Helper&lt;/h4&gt;

&lt;p&gt;pad和css里的padding相似
float在显示内容后把cursor恢复之前位置&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="n"&gt;stroke_horizontal_rule&lt;/span&gt;
&lt;span class="n"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text padded both before and after.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;stroke_horizontal_rule&lt;/span&gt;
&lt;span class="n"&gt;pad_top&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text padded on the top.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;stroke_horizontal_rule&lt;/span&gt;
&lt;span class="n"&gt;pad_bottom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text padded on the bottom.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;stroke_horizontal_rule&lt;/span&gt;
&lt;span class="n"&gt;move_down&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text written before the float block.&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;move_down&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
  &lt;span class="n"&gt;bounding_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:width&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text written inside the float block.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;stroke_bounds&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text written after the float block.&amp;quot;&lt;/span&gt;

&lt;/pre&gt;
&lt;h4&gt;Adding new page&lt;/h4&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;We are still on the initial page for this example. Now I&amp;#39;ll ask &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;Prawn to gently start a new page. Please follow me to the next page.&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;start_new_page&lt;/span&gt;

&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;See. We&amp;#39;ve left the previous page behind.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;h4&gt;Measurement&lt;/h4&gt;

&lt;p&gt;Prawn里基本单位是point，每个point是1/72英寸
只需要 require &amp;ldquo;prawn/measurement_extensions&amp;rdquo;, Numeric类就具有那些helper方法&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;prawn/measurement_extensions&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:mm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:dm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:yd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ft&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;.each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;measurement&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;measurement&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; in PDF Points: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;measurement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; pt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;move_down&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nf"&gt;.mm&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;pre class="highlight shell"&gt;1 mm &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 2.834645669291339 pt
1 cm &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 28.34645669291339 pt
1 dm &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 283.46456692913387 pt
1 m &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 2834.645669291339 pt
1 &lt;span class="k"&gt;in in &lt;/span&gt;PDF Points: 72 pt
1 yd &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 2592 pt
1 ft &lt;span class="k"&gt;in &lt;/span&gt;PDF Points: 864 pt
&lt;/pre&gt;
&lt;h4&gt;view&lt;/h4&gt;

&lt;p&gt;当要使用自定义的类，应该用mixin。
也可以定义一个document()方法，返回一个符合Prawn::Document
protocol的对象，所有方法会代理到那个对象。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;Greeter&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Prawn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;View&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;say_hello&lt;/span&gt;
    &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello, &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;say_goodbye&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Courier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Goodbye, &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;greeter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Gregory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;greeter&lt;/span&gt;&lt;span class="nf"&gt;.say_hello&lt;/span&gt;
&lt;span class="n"&gt;greeter&lt;/span&gt;&lt;span class="nf"&gt;.say_goodbye&lt;/span&gt;
&lt;span class="n"&gt;greeter&lt;/span&gt;&lt;span class="nf"&gt;.save_as&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;greetings.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;Graphics&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Basics&lt;/li&gt;
&lt;li&gt;Shapes&lt;/li&gt;
&lt;li&gt;Fill and Stroke settings&lt;/li&gt;
&lt;li&gt;Transformations&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Basics&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;helpers: stroke_axis&lt;/li&gt;
&lt;li&gt;fill and stroke&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;fill 和 stroke是最终画出图形的方法，其他的方法只是定义了drawing path，例如 rectangle, circle or line_to&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="n"&gt;stroke_axis&lt;/span&gt;

&lt;span class="c1"&gt;# No block&lt;/span&gt;
&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;stroke&lt;/span&gt;

&lt;span class="n"&gt;rectangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;fill&lt;/span&gt;

&lt;span class="c1"&gt;# With block&lt;/span&gt;
&lt;span class="n"&gt;stroke&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;rectangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Method hook&lt;/span&gt;
&lt;span class="n"&gt;stroke_line&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;fill_rectangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;/pre&gt;
&lt;h4&gt;Shapes&lt;/h4&gt;

&lt;h4&gt;Filling and Stroke Setting&lt;/h4&gt;

&lt;p&gt;注意，由于Ruby认为=左边的是局部变量，而不是函数调用，当设置line_width时，需要加上self&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>encoding message</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/12/encoding-message/"/>
    <id>http://blog.url.com/2014/09/12/encoding-message/</id>
    <published>2014-09-12T01:45:00Z</published>
    <updated>2014-09-12T10:48:31+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;关于practicingruby&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://practicingruby.com/"&gt;practicingruby&lt;/a&gt;是Gregory
Brown定期撰写的关于ruby编程的文章。很有深度，欢迎大家&lt;a href="http://elmcitycraftworks.org/post/68914636401/annual-subscriptions-for-practicing-ruby"&gt;订阅&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;The anatomy of information in software systems&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://practicingruby.com/articles/information-anatomy?u=326cc9d930"&gt;9月份的文章&lt;/a&gt;是关于如何把消息编码。内容如下的IRC消息，应该如何解释&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="no"&gt;PRIVMSG&lt;/span&gt; &lt;span class="c1"&gt;#practicing ruby testing :Seasons greetings to you all!\r\n&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在ruby里可以表示为&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PRIVMSG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#practicing ruby testing&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Seasons greetings to you all!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;序列化为字符串&lt;/h3&gt;

&lt;p&gt;使用&lt;a href="https://github.com/msgpack/msgpack/blob/master/spec.md"&gt;Msgpack&lt;/a&gt;序列化上面的消息,得到的HEX是&lt;/p&gt;
&lt;pre class="highlight text"&gt;
93 a7 50 52 49 56 4d 53 47 b8 23 70 72 61 63 74 69 63 69 6e 67 2d 72 75 62 
79 2d 74 65 73 74 69 6e 67 bd 53 65 61 73 6f 6e 73 20 67 72 65 65 74 69 6e 
67 73 20 74 6f 20 79 6f 75 20 61 6c 6c 21

&lt;/pre&gt;
&lt;p&gt;In Ruby:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\x93\xA7&lt;/span&gt;&lt;span class="s2"&gt;PRIVMSG&lt;/span&gt;&lt;span class="se"&gt;\xB8&lt;/span&gt;&lt;span class="s2"&gt;#practicing-ruby-testing&lt;/span&gt;&lt;span class="se"&gt;\xBD&lt;/span&gt;&lt;span class="s2"&gt;Seasons greetings to you all!&amp;quot;&lt;/span&gt;

&lt;/pre&gt;
&lt;p&gt;分解它的结构得到：&lt;/p&gt;

&lt;p&gt;&lt;img alt="Image" src="http://i.imgur.com/YAh5olr.png" /&gt;&lt;/p&gt;

&lt;p&gt;其中93, A7, B8, BD有特定含义, 实际上A0到BF表示的是0到31 byte的string&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;0xA7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;0xA0&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PRIVMSG&amp;quot;&lt;/span&gt;&lt;span class="nf"&gt;.size&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;0xB8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;0xA0&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#practicing-ruby-testing&amp;quot;&lt;/span&gt;&lt;span class="nf"&gt;.size&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;0xBD&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;0xA0&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Seasons greetings to you all!&amp;quot;&lt;/span&gt;&lt;span class="nf"&gt;.size&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;结构化&lt;/h3&gt;

&lt;p&gt;不仅是得到字符串数组，我们还要明确每个部分的意义，可以用MessagePack&amp;rsquo;s
application-specific type&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://i.imgur.com/s3Rjgzz.png" /&gt;&lt;/p&gt;

&lt;p&gt;分解后得到的是&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://i.imgur.com/AubaxCk.png" /&gt;&lt;/p&gt;

&lt;p&gt;ruby decode 代码&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="n"&gt;data_types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CommandName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Parameter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;MessageBody&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MessagePackDecoder&lt;/span&gt;&lt;span class="nf"&gt;.unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_bytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_types&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#  [ CommandName &amp;lt;&amp;quot;PRIVMSG&amp;quot;&amp;gt;, &lt;/span&gt;
&lt;span class="c1"&gt;#    Parameter   &amp;lt;&amp;quot;#practicing-ruby-testing&amp;quot;&amp;gt;, &lt;/span&gt;
&lt;span class="c1"&gt;#    MessageBody &amp;lt;&amp;quot;Season greetings to you all!&amp;quot;&amp;gt; ]&lt;/span&gt;

&lt;/pre&gt;
&lt;p&gt;handler decode的例子代码&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;Parameter&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;byte_array&lt;/span&gt;&lt;span class="nf"&gt;.pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;ArgumentError&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@text&lt;/span&gt;&lt;span class="nf"&gt;.include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:text&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;使用语法规则定义结构&lt;/h3&gt;

&lt;p&gt;上面的方法虽然让计算机容易理解消息的结构，但让人去理解就困难了。&lt;/p&gt;

&lt;p&gt;如果使用Augmented Backus–Naur Form语法规则，可以表示如下&lt;/p&gt;
&lt;pre class="highlight text"&gt;
message    =  command [ params ] crlf
command    =  1*letter / 3digit
params     =  *14( SPACE middle ) [ SPACE &amp;quot;:&amp;quot; trailing ]
           =/ 14( SPACE middle ) [ SPACE [ &amp;quot;:&amp;quot; ] trailing ]

nospcrlfcl =  %x01-09 / %x0B-0C / %x0E-1F / %x21-39 / %x3B-FF
                ; any octet except NUL, CR, LF, &amp;quot; &amp;quot; and &amp;quot;:&amp;quot;

middle     =  nospcrlfcl *( &amp;quot;:&amp;quot; / nospcrlfcl )
trailing   =  *( &amp;quot;:&amp;quot; / &amp;quot; &amp;quot; / nospcrlfcl )

SPACE      =  %x20        ; space character
crlf       =  %x0D %x0A   ; &amp;quot;carriage return&amp;quot; &amp;quot;linefeed&amp;quot;
letter     =  %x41-5A / %x61-7A       ; A-Z / a-z
digit      =  %x30-39                 ; 0-9

&lt;/pre&gt;
&lt;p&gt;在ruby，我们用&lt;a href="https://github.com/mjackson/citrus"&gt;citrus&lt;/a&gt;&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;grammar&lt;/span&gt; &lt;span class="no"&gt;IRC&lt;/span&gt;
  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;params?&lt;/span&gt; &lt;span class="n"&gt;endline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;:command&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;capture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;:params&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;capture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
    &lt;span class="n"&gt;letters&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;three_digit_code&lt;/span&gt; 
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;trailing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="sc"&gt;?)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;trailing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="sc"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;captures&lt;/span&gt;&lt;span class="nf"&gt;.fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:middle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;captures&lt;/span&gt;&lt;span class="nf"&gt;.fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:trailing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;
    &lt;span class="n"&gt;non_special&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;non_special&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;trailing&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;non_special&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;letters&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;zA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;three_digit_code&lt;/span&gt;
    &lt;span class="sr"&gt;/\d{3}/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;to_str&lt;/span&gt;&lt;span class="nf"&gt;.to_i&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;non_special&lt;/span&gt;
    &lt;span class="o"&gt;[^&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="n"&gt;endline&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;


&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;citrus&amp;#39;&lt;/span&gt;
&lt;span class="no"&gt;Citrus&lt;/span&gt;&lt;span class="nf"&gt;.load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;irc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PRIVMSG #practicing-ruby-testing :Seasons greetings to you all!&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;IRC&lt;/span&gt;&lt;span class="nf"&gt;.parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.value&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:command&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; 
&lt;span class="c1"&gt;#=&amp;gt; &amp;quot;PRIVMSG&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:params&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#=&amp;gt; [&amp;quot;#practicing-ruby-testing&amp;quot;, &amp;quot;Seasons greetings to you all!&amp;quot;]&lt;/span&gt;

&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>meet elixir</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/09/meet-elixir/"/>
    <id>http://blog.url.com/2014/09/09/meet-elixir/</id>
    <published>2014-09-09T04:21:00Z</published>
    <updated>2014-09-10T09:06:18+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Meet Elixir ScreenCast&lt;/h2&gt;

&lt;p&gt;Elixir马上就要发布1.0版，估计以后的语法不会有大的改动了。&lt;/p&gt;

&lt;p&gt;看Elixir的书和screencast的其中一个问题是等到你看的时候，Elixir的语法已经和制作书和screencast时的语法不一样了。&lt;/p&gt;

&lt;p&gt;最近看了Meet Elixir，并把screencast里的例子更新到使用最新的Elixir版本(0.15.1)。放在
&lt;a href="https://github.com/ruanwz/mystreamers"&gt;https://github.com/ruanwz/mystreamers&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>review confident ruby(handling failure)</title>
    <link rel="alternate" href="http://blog.url.com/2014/09/06/review-confident-ruby-handling-failure/"/>
    <id>http://blog.url.com/2014/09/06/review-confident-ruby-handling-failure/</id>
    <published>2014-09-06T06:19:00Z</published>
    <updated>2014-09-05T14:41:08+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;介绍 Handling Failure&lt;/h2&gt;

&lt;p&gt;自信地处理错误情况。这本书只讨论BRE(begin/rescue/end) block,因为BRE在代码里是如此醒目,
会把注意力引离method要做的事，所以需要想办法不要让它出现在程序的主要逻辑里。&lt;/p&gt;

&lt;h2&gt;Handling Failure的模式&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Prefer top-level rescue clause&lt;/li&gt;
&lt;li&gt;Use checked methods for risky operations&lt;/li&gt;
&lt;li&gt;Use bouncer methods&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Prefer top-level rescue clause&lt;/h3&gt;

&lt;p&gt;当代码里有begin/rescue/end block时，应尽量使用top level的形式,
这样可以清晰地划分出happy path和错误处理部分。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;bar&lt;/span&gt;
  &lt;span class="c1"&gt;# happy path goes up here&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="c1"&gt;#---------------------------&lt;/span&gt;
  &lt;span class="c1"&gt;# failure scenarios go down here&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;Use checked methods for risky operations&lt;/h3&gt;

&lt;p&gt;如果一个method里包含需要处理从lib或system
call的调用出现的错误，那么应该单独写一个函数把它包住,并处理可能出现的异常，这样可以避免重复处理底层的异常&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;filter_through_pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
  &lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="nf"&gt;.popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.close_write&lt;/span&gt;
      &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.read&lt;/span&gt;
    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EPIPE&lt;/span&gt;
      &lt;span class="n"&gt;message&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;results&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;可以用&amp;quot;Receive policies instead of data&amp;quot;模式重构为&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;checked_popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error_policy&lt;/span&gt;&lt;span class="o"&gt;=-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;raise&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="nf"&gt;.popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EPIPE&lt;/span&gt;
  &lt;span class="n"&gt;error_policy&lt;/span&gt;&lt;span class="nf"&gt;.call&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;filter_through_pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;checked_popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.close_write&lt;/span&gt;
    &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="nf"&gt;.read&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;Use bouncer methods&lt;/h3&gt;
</content>
  </entry>
</feed>
