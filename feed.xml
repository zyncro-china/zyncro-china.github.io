<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-03-09T02:38:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>No Backend Development</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/09/no-backend-development/"/>
    <id>http://blog.url.com/2014/03/09/no-backend-development/</id>
    <published>2014-03-09T02:38:00Z</published>
    <updated>2014-03-10T10:23:58+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Backend As A Service&lt;/h2&gt;

&lt;p&gt;Recently I have used some Backend As A Service(BaaS) platform to make the
development faster. How can it be faster than not doing. So for some very small
demos, I tried firebase. It seems good. Only one thing is missing, it dont
support to store an array. So everything must be an object.&lt;/p&gt;

&lt;h2&gt;Find an alternative solution&lt;/h2&gt;

&lt;p&gt;In order to achieve the following goal, I want to find another firebase like
platform.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Support array&lt;/li&gt;
&lt;li&gt;Can be privately hosted in own machines&lt;/li&gt;
&lt;li&gt;Can also hosted on some popular PaaS platform like heroku&lt;/li&gt;
&lt;li&gt;Open source project that we can dig into the code when we need&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I found the deployd is good, and although there is some issues when I issue
some commands in the console. But other things works well at the first glance.&lt;/p&gt;

&lt;h2&gt;Deploy on heroku&lt;/h2&gt;

&lt;p&gt;Heroku is so wonderful platform that we can verify some idea very quickly by
deploy a demo without any budget.&lt;/p&gt;

&lt;p&gt;Following is how to deploy deployd on heroku&lt;/p&gt;

&lt;h3&gt;setup a new heroku app&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
heroku apps:create myawesomedeployd

&lt;/pre&gt;
&lt;p&gt;Next, add mongodb resource&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
 heroku addons:add mongolab
&lt;/pre&gt;
&lt;p&gt;Add heroku config files and the node.js script&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="c"&gt;# Procfile&lt;/span&gt;
web: node server

&lt;/pre&gt;&lt;pre class="highlight javascript"&gt;
&lt;span class="c1"&gt;// package.json 
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;app_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super awesome app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;homepage&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;contributors&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;deployd&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;= 0&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;node server&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;engines&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.8.x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;npm&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;1.2.x&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// server.js 
&lt;/span&gt;
&lt;span class="c1"&gt;// require deployd
&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;deployd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;deployd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// configure database etc. 
&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;deployd&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;host.mongolab.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33559&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;heroku_app&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;heroku_app&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// heroku requires these settings for sockets to work
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xhr-polling&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// start the server
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// debug
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Server is listening on port: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Deployd requires this
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Give the server a chance to return an error
&lt;/span&gt;    &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;/pre&gt;
&lt;h3&gt;generate the keys for deployd&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mkdir .dpd
touch .dpd/.gitemptydir
git add .dpd/.gitemptydir
dpd keygen
dpd showkey

&lt;/pre&gt;
&lt;h3&gt;create a resource directory to avoid node.js error&lt;/h3&gt;

&lt;p&gt;When running deployd, it could report:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
deployd Error: ENOENT, readdir &lt;span class="s1"&gt;&amp;#39;resources&amp;#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Just need to commit an empty directory to avoid this error&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
mkdir resources
touch resources/.gitemptydir
git add &lt;span class="k"&gt;*&lt;/span&gt;
git reset node_modules
git commit -m &lt;span class="s1"&gt;&amp;#39;add resources/\n&amp;#39;&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;Deploy to Heroku&lt;/h3&gt;

&lt;p&gt;Now just push to heroku&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
git push origin master
&lt;/pre&gt;
&lt;p&gt;Then access from http://herokuhost.com/dashboard&lt;/p&gt;

&lt;h3&gt;Connect to mongolab to check the data:&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mongo -u heroku_app2239 -p password_str --port 3355 --host
ds033.mongolab.com heroku_app2239
&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Improve my reading speed</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/08/improve-my-reading-speed/"/>
    <id>http://blog.url.com/2014/03/08/improve-my-reading-speed/</id>
    <published>2014-03-08T15:19:00Z</published>
    <updated>2014-03-07T13:32:04+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;I heard about this today that can help to increase the reading speed&lt;/h2&gt;

&lt;p&gt;Today I have found this site &lt;a href="http://www.spritzinc.com"&gt;spritz&lt;/a&gt;. It has some
theory about &lt;a href="http://www.spritzinc.com/the-science/"&gt;how to improve the reading
speed&lt;/a&gt;. I have read about some kind of
this theory before. And have installed some iOS app for training speed reading
that based the theory. But most of time I don&amp;rsquo;t have time to do the training
separated. I have to most of content in browser.&lt;/p&gt;

&lt;h2&gt;A browser extension for spritz&lt;/h2&gt;

&lt;p&gt;There is a chrome extension that can display any selected text in the spritz
window at a &lt;a href="https://github.com/fantactuka/spritz-chrome-extension"&gt;github
repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After installing it, now I can try spritz when reading news, blogs or any
material.&lt;/p&gt;

&lt;p&gt;I am looking forward for the spritz to support more languages. They said more
languages are &lt;a href="http://www.spritzinc.com/faq/"&gt;coming&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;Slow down the speed in the extension&lt;/h2&gt;

&lt;p&gt;The preset reading speed is too fast for me (500 WPM), I have to set a lower
value in the public/javascripts/initialize.js of that extension:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;
&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCurrentTextSpeed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s see if I can increase it in future.&lt;/p&gt;

&lt;h2&gt;Add some control to pause and resume&lt;/h2&gt;

&lt;p&gt;In public/javascripts/initialize.js&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pause&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;pauseText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;resume&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;resumeText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;pauseText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pauseText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;resumeText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resumeText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Write presentation in markdown and hosted on heroku</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/07/write-presentation-in-markdown-and-hosted-on-heroku/"/>
    <id>http://blog.url.com/2014/03/07/write-presentation-in-markdown-and-hosted-on-heroku/</id>
    <published>2014-03-07T14:34:00Z</published>
    <updated>2014-03-10T17:17:21+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Write docs in Markdown&lt;/h2&gt;

&lt;p&gt;As more and more docs and email can be written in markdown format, It is time
to try it in the slides/presentation.&lt;/p&gt;

&lt;h2&gt;Reveal.js&lt;/h2&gt;

&lt;p&gt;Seems reveal.js is very easy to use, I try to use it to write slides, and
I hope it can be hosted on heroku, so I can use it no matter what devices I am
using, and where I am.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;h3&gt;install reveal.js&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
git clone git@github.com:MichaelBitard/revealjs_heroku.git

&lt;/pre&gt;
&lt;h3&gt;use express to host&lt;/h3&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="c1"&gt;//web.js
&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;express&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Listening on &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;add heroku Procfile&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
web: node web.js

&lt;/pre&gt;
&lt;h3&gt;add http basic auth to protect the content&lt;/h3&gt;
&lt;pre class="highlight javascript"&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http-auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;basic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;basic&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;realm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Zyncro China Presentation.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/data/users.htpasswd&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;// gevorg:gpass, Sarah:testpass ...
&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;basic&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;generate the user/password&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mkdir data; &lt;span class="nb"&gt;cd &lt;/span&gt;data
htpasswd -c users.htpasswd david
&lt;/pre&gt;
&lt;h3&gt;use haml template&lt;/h3&gt;
&lt;pre class="highlight text"&gt;
npm install grunt-contrib-haml --save
&lt;/pre&gt;
&lt;p&gt;Then add haml task into Gruntfile.js&lt;/p&gt;

&lt;h3&gt;troubleshooting&lt;/h3&gt;

&lt;p&gt;If express start failed(call: node web.js), then select the express version:
3.1.x&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Write an opencv android app using jruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/06/write-an-opencv-android-app-using-jruby/"/>
    <id>http://blog.url.com/2014/03/06/write-an-opencv-android-app-using-jruby/</id>
    <published>2014-03-06T07:25:00Z</published>
    <updated>2014-03-06T23:20:23+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Download opencv lib&lt;/h2&gt;

&lt;p&gt;Download lib from http://sourceforge.net/projects/opencvlibrary/files/opencv-android/2.4.8/
Unzip the files&lt;/p&gt;

&lt;h2&gt;Setup ruboto project&lt;/h2&gt;

&lt;h3&gt;use Ruboto CLI to create a new project&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
ruboto gen app -t 15 --package org.ruboto.example.opencv

&lt;/pre&gt;
&lt;h3&gt;Add the opencv project into the project.properties&lt;/h3&gt;
&lt;pre class="highlight java"&gt;
&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;library&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reference&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=../&lt;/span&gt;&lt;span class="n"&gt;OpenCV&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sdk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sdk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt; 
&lt;/pre&gt;
&lt;h3&gt;Add following import lines into the Activity file:&lt;/h3&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;org.opencv.android.BaseLoaderCallback&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;org.opencv.android.CameraBridgeViewBase.CvCameraViewFrame&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;org.opencv.android.LoaderCallbackInterface&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;org.opencv.android.OpenCVLoader&amp;#39;&lt;/span&gt;

&lt;/pre&gt;
&lt;p&gt;Now you can run following command to build the app and check if the OpenCV Lib
is imported correctly.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
rake install start
&lt;/pre&gt;
&lt;h3&gt;Start from here to write the awesome OpenCV App using ruby&lt;/h3&gt;

&lt;p&gt;Now we can start to write the app.&lt;/p&gt;

&lt;h3&gt;Trouble Shooting&lt;/h3&gt;

&lt;h4&gt;missing build.xml&lt;/h4&gt;

&lt;p&gt;Seems the new android version require build.xml, so just copy this file from
other project and change the project name in it.&lt;/p&gt;

&lt;h4&gt;Failure [INSTALL&lt;em&gt;FAILED&lt;/em&gt;ALREADY_EXISTS]&lt;/h4&gt;

&lt;p&gt;use the adb command to delete the existed app:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
adb uninstall org.ruboto.ruanwz.opencv_demo
&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>ZeroMQ in Ruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/05/zeromq-in-ruby/"/>
    <id>http://blog.url.com/2014/03/05/zeromq-in-ruby/</id>
    <published>2014-03-05T03:01:00Z</published>
    <updated>2014-03-05T13:24:48+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;2 ways to write concurrent program&lt;/h2&gt;

&lt;p&gt;In order to make use of all cpu cores and increase the capability, we need to
write concurrent programs that can communicate with each other.&lt;/p&gt;

&lt;p&gt;There are 2 different communication options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;inter-thread&lt;/li&gt;
&lt;li&gt;inter-process&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When using inter-thread option, the thread can share the same memory space in
the process. But shared data in different running thread can also easily cause some bug that is hard to find. It is also limited on the same host. So it is not scalable.&lt;/p&gt;

&lt;p&gt;Inter-process takes more memory space, but it has no disadvantage as the
inter-thread option. So inter-process option is preferred in most of the cases.&lt;/p&gt;

&lt;h2&gt;Inter-Process communication&lt;/h2&gt;

&lt;p&gt;on unix system, There are at least 2 ways to implement inter-process
communication:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;pipe&lt;/li&gt;
&lt;li&gt;socket(tcp, udp, unix)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the shell, using | can pass the data between different program.&lt;/p&gt;

&lt;p&gt;And mkfifo can also create a named pipe(fifo). It can easily be used to shared
data between unrelated process.&lt;/p&gt;

&lt;p&gt;TCP socket is reliable and UDP is not reliable. UNIX socket is only available
on the same host.&lt;/p&gt;

&lt;h2&gt;ZeroMQ and its communication models&lt;/h2&gt;

&lt;p&gt;ZeroMQ provides a wrapper for inter-process(also include inter-thread) communication.&lt;/p&gt;

&lt;p&gt;The underlying implementation includes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;tcp
It use TCP Socket, and don&amp;rsquo;t tell the port number because there is no
authentication&lt;/li&gt;
&lt;li&gt;ipc
It use UNIX Socket.&lt;/li&gt;
&lt;li&gt;inproc
It avoid manually shared data between different threads.&lt;/li&gt;
&lt;li&gt;multicast
Implemented in UDP multicast, but some router could ban this.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The ZeroMQ communication models includes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;REQ/REP&lt;/li&gt;
&lt;li&gt;PUB/SUB&lt;/li&gt;
&lt;li&gt;PUSH/PULL&lt;/li&gt;
&lt;li&gt;PAIR&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Using ZeroMQ in Ruby&lt;/h2&gt;

&lt;h3&gt;Install&lt;/h3&gt;

&lt;p&gt;gem install zmq&lt;/p&gt;

&lt;h3&gt;Usage&lt;/h3&gt;

&lt;p&gt;For the REQ/REP model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="c1"&gt;# rep.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zmq&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ZMQ&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Context&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="nf"&gt;.socket&lt;/span&gt; &lt;span class="no"&gt;ZMQ&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REP&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.bind&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5000&amp;#39;&lt;/span&gt;

&lt;span class="kp"&gt;loop&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.recv&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Got: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# req.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zmq&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ZMQ&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Context&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="nf"&gt;.socket&lt;/span&gt; &lt;span class="no"&gt;ZMQ&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.connect&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tcp://127.0.0.1:5000&amp;#39;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;msg %s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.recv&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Replied: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;the end&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="nf"&gt;.close&lt;/span&gt;

&lt;/pre&gt;
&lt;p&gt;Remember to call socket.close before exit the program.&lt;/p&gt;

&lt;p&gt;Using * instead of 127.0.0.1 can accept all hosts&lt;/p&gt;

&lt;p&gt;The client and server don&amp;rsquo;t have to start in order.&lt;/p&gt;

&lt;h3&gt;Create a Chatting Service&lt;/h3&gt;

&lt;p&gt;Using Push/Pull and Pub/Sub models, we can create a chatting service.
We need 2 sockets:
1. message-queue
1. message-display&lt;/p&gt;

&lt;p&gt;The chatting client push the new message to the message-queue socket, and subscribe a message-display socket.&lt;/p&gt;

&lt;p&gt;The chatting server pull from the message-queue socket, then publish to the message-display socket&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Write auto running task on raspberry pi</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/01/write-auto-running-task-on-raspberry-pi/"/>
    <id>http://blog.url.com/2014/03/01/write-auto-running-task-on-raspberry-pi/</id>
    <published>2014-03-01T14:26:00Z</published>
    <updated>2014-03-01T01:28:22+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h3&gt;A cheap board running complete linux OS&lt;/h3&gt;

&lt;p&gt;Not like Arduino, the Raspberry Pi board can run a full linux OS and also have
GPIO pins, so there are more thing could be done on the Raspberry Pi. Now
I need to find out how to run some task automatically when the board boots.&lt;/p&gt;

&lt;h3&gt;Install Upstart package&lt;/h3&gt;

&lt;p&gt;When install upstart, it ask some message that make me worry:&lt;/p&gt;
&lt;pre class="highlight text"&gt;
You are about to do something potentially harmful.
To continue type in the phrase &amp;#39;Yes, do as I say!&amp;#39;


...
Installing new version of config file /etc/modprobe.d/fbdev-blacklist.conf ...
Installing new version of config file /etc/init.d/udev ...
initctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused
[ ok ] Stopping the hotplug events dispatcher: udevd.
[ ok ] Starting the hotplug events dispatcher: udevd.
update-initramfs: deferring update (trigger activated)
Setting up libjson0:armhf (0.10-1.2) ...
Setting up upstart (1.6.1-1) ...
Processing triggers for initramfs-tools ...
&lt;/pre&gt;
&lt;p&gt;I follow the instruments and reboot. Then it can&amp;rsquo;t boot to the login prompt again.&lt;/p&gt;

&lt;p&gt;After re-write the new image to the SDCard, and the above process runs fine.&lt;/p&gt;

&lt;h3&gt;Write a new upstart task&lt;/h3&gt;

&lt;h4&gt;check the syntax&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;init-checkconf -d myservice.conf&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Notes: a work around when the checking meets error: &amp;ldquo;ERROR: failed to ask
Upstart to check conf file&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bugs.launchpad.net/upstart/+bug/881885"&gt;init-checkconf bug&lt;/a&gt;&lt;/p&gt;
&lt;pre class="highlight text"&gt;
sudo apt-get install dbus-x11
eval `dbus-launch --auto-syntax`
&lt;/pre&gt;
&lt;h4&gt;list the service&lt;/h4&gt;

&lt;p&gt;initctl list&lt;/p&gt;
</content>
  </entry>
</feed>
