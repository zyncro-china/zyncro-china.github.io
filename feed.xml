<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-02-28T05:52:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Compile vim source with python and ruby support</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/28/compile-vim-source-with-python-and-ruby-support/"/>
    <id>http://blog.url.com/2014/02/28/compile-vim-source-with-python-and-ruby-support/</id>
    <published>2014-02-28T05:52:00Z</published>
    <updated>2014-02-28T13:59:27+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h3&gt;Compile the vim after upgrade ruby to 2.1.1&lt;/h3&gt;

&lt;p&gt;After I upgrade to ruby 2.1.1, I found the vim can&amp;rsquo;t work, so I get the source of vim and compile it again.&lt;/p&gt;

&lt;p&gt;It is weird that the src/Makefile can&amp;rsquo;t take effect, I have to manually input the configure parameters:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
 ./configure --with-features&lt;span class="o"&gt;=&lt;/span&gt;HUGE &lt;span class="se"&gt;\&lt;/span&gt;
--enable-multibyte&lt;span class="o"&gt;=&lt;/span&gt;yes &lt;span class="se"&gt;\&lt;/span&gt;
--enable-rubyinterp&lt;span class="o"&gt;=&lt;/span&gt;yes &lt;span class="se"&gt;\&lt;/span&gt;
    --with-ruby-command&lt;span class="o"&gt;=&lt;/span&gt;/home/david/.rvm/rubies/ruby-2.1.1/bin/ruby &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-gui&lt;span class="o"&gt;=&lt;/span&gt;gnome2 &lt;span class="se"&gt;\&lt;/span&gt;
    --with-x &lt;span class="se"&gt;\&lt;/span&gt;
    --enable-pythoninterp&lt;span class="o"&gt;=&lt;/span&gt;yes &lt;span class="se"&gt;\&lt;/span&gt;
--with-python-config-dir&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/python2.7/config/


make

sudo make install

&lt;/pre&gt;
&lt;p&gt;For the Command-T plugin:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="nb"&gt;cd &lt;/span&gt;ruby
ruby extconf.rb
make
&lt;/pre&gt;
&lt;p&gt;Done!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Hacking simplewebrtc.js to change the video resolution</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/25/hacking-simplewebrtc-js-to-change-the-video-resolution/"/>
    <id>http://blog.url.com/2014/02/25/hacking-simplewebrtc-js-to-change-the-video-resolution/</id>
    <published>2014-02-25T07:37:00Z</published>
    <updated>2014-02-24T16:05:44+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Introduction webrtc and simplewebrtc.js&lt;/h2&gt;

&lt;p&gt;I am very exciting about WebRTC technology. It makes the browser can provide
some peer to peer functionalities that can&amp;rsquo;t be thought before.&lt;/p&gt;

&lt;p&gt;The only limitation now is that only a few mainframe browsers support WebRTC,
and they use different API.&lt;/p&gt;

&lt;p&gt;I think this is where simplewebrtc.js can help the WebRTC development easier. By
using the unified interface, developer don&amp;rsquo;t have to handle the difference
between browsers.&lt;/p&gt;

&lt;p&gt;I hope this library will not be too complicated, as its
name suggests. So that I can modify when I need, without having to read many
code that I don&amp;rsquo;t use.&lt;/p&gt;

&lt;h2&gt;The SimpleWebRTC can&amp;rsquo;t customize the video resolution&lt;/h2&gt;

&lt;p&gt;The simplewebrtc doesn&amp;rsquo;t support changing constraints.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;
&lt;span class="nx"&gt;SimpleWebRTC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startLocalVideo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webrtc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startLocalMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;attachMediaStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLocalVideoContainer&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;muted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;mirror&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In order to pass in the constraints, I override this function(I write the app
in coffeescript):&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;
&lt;span class="nx"&gt;SimpleWebRTC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startLocalVideo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;constraints&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;webrtc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;startLocalMedia&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;constraints&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nx"&gt;attachMediaStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLocalVideoContainer&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;muted&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;mirror&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Then we can pass the constraints in the constructor:&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;span class="nx"&gt;webrtc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimpleWebRTC&lt;/span&gt;
  &lt;span class="na"&gt;localVideoEl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;localVideo&amp;#39;&lt;/span&gt;
  &lt;span class="na"&gt;remoteVideosEl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;remotes&amp;#39;&lt;/span&gt;
  &lt;span class="na"&gt;autoRequestMedia&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;detectSpeakingEvents&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;autoAdjustMic&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
  &lt;span class="na"&gt;constraints&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;mandatory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;maxWidth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;320&lt;/span&gt;
        &lt;span class="na"&gt;maxHeight&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;
&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>use bootstrap and sass in a semantic way</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/24/use-bootstrap-and-sass-in-a-semantic-way/"/>
    <id>http://blog.url.com/2014/02/24/use-bootstrap-and-sass-in-a-semantic-way/</id>
    <published>2014-02-24T03:46:00Z</published>
    <updated>2014-02-24T15:34:47+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Using twitter bootstrap directly means mix things together&lt;/h2&gt;

&lt;p&gt;When developing the web page, using bootstrap could accelerate the process. But
mixing the content and the display style is not a very good solution.&lt;/p&gt;

&lt;p&gt;So we try to use SASS to isolate the styles, and make the html more semantic.&lt;/p&gt;

&lt;h2&gt;SASS features that helps&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins"&gt;mixins&lt;/a&gt;
and
&lt;a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html#extend"&gt;extend&lt;/a&gt;
allow you to define styles that can be re-used throughout the stylesheet
without needing to resort to non-semantic classes like .float-left&lt;/p&gt;

&lt;h2&gt;Convert an example that use bootstrap style to semantic html&lt;/h2&gt;

&lt;p&gt;The original index.haml:&lt;/p&gt;
&lt;pre class="highlight haml"&gt;
&lt;span class="nf"&gt;#main&lt;/span&gt;
  &lt;span class="nt"&gt;%a&lt;/span&gt;&lt;span class="nc"&gt;.btn.btn-primary&lt;/span&gt; Press Me

&lt;/pre&gt;
&lt;p&gt;using extend, we use more meaningful class: &amp;ldquo;highlight&amp;rdquo;, and convert the above code into following haml:&lt;/p&gt;
&lt;pre class="highlight haml"&gt;&lt;span class="nf"&gt;#main&lt;/span&gt;
  &lt;span class="nt"&gt;%a&lt;/span&gt;&lt;span class="nc"&gt;.highlight&lt;/span&gt;

&lt;/pre&gt;
&lt;p&gt;and the scss file: &lt;/p&gt;
&lt;pre class="highlight scss"&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;variables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nn"&gt;#main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nc"&gt;.highlight&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;@extend&lt;/span&gt; &lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;@extend&lt;/span&gt; &lt;span class="nc"&gt;.btn-primary&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It seems like that we have to write more lines, but isolating things will pay
the costs in the long term when the project grow bigger.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Combine Backbone and React.js</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/20/combine-backbone-and-react-js/"/>
    <id>http://blog.url.com/2014/02/20/combine-backbone-and-react-js/</id>
    <published>2014-02-20T03:42:00Z</published>
    <updated>2014-02-20T14:24:07+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Get the best of both Backbone and React.js&lt;/h2&gt;

&lt;p&gt;Backbone is a small and simple framework for Single Page Application. But
rendering views is hard, so let&amp;rsquo;s try to use React.js together, and let
React.js to finish the hard work for us.&lt;/p&gt;

&lt;h2&gt;React.js Framework&lt;/h2&gt;

&lt;h3&gt;JSX syntax&lt;/h3&gt;

&lt;p&gt;We can use coffeescript to make writting component easier directly in the
coffeescript without compiling first&lt;/p&gt;

&lt;h3&gt;Object Definition and Intializaion&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;to define a component: &lt;code&gt;React.createClass&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;use the component, and pass the props: &lt;code&gt;React.renderComponent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;called automatically by React before a component is rendered: &lt;code&gt;componentWillMount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;called before unmount component: &lt;code&gt;componentWillUnmount&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Reactive state&lt;/h3&gt;

&lt;p&gt;render() methods are written declaratively as functions of &lt;code&gt;this.props&lt;/code&gt; and
&lt;code&gt;this.state.&lt;/code&gt; The framework guarantees the UI is always consistent with the
inputs.&lt;/p&gt;

&lt;p&gt;React.js will automatically update the view according to the state&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;initialize the state: &lt;code&gt;getInitialState&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;update the state: &lt;code&gt;this.setState()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;React events&lt;/h3&gt;

&lt;p&gt;event handler should only returns false to avoid the default action&lt;/p&gt;

&lt;h3&gt;refs&lt;/h3&gt;

&lt;p&gt;refs are defined in the JSX, and use &lt;code&gt;getDOMNode()&lt;/code&gt; to get the native DOM element&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDOMNode&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/pre&gt;
&lt;h2&gt;Communication&lt;/h2&gt;

&lt;h3&gt;Communication from React Component to Backbone&lt;/h3&gt;

&lt;p&gt;pass the callback as the React Component&amp;rsquo;s callback using &lt;code&gt;props&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;Communication from Backbone to React Component&lt;/h3&gt;

&lt;p&gt;use Backbone Model&amp;rsquo;s event binding, like:&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;on&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;change&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;forceUpdate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>switch from guard to simpler solution</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/19/switch-from-guard-to-simpler-solution/"/>
    <id>http://blog.url.com/2014/02/19/switch-from-guard-to-simpler-solution/</id>
    <published>2014-02-19T01:43:00Z</published>
    <updated>2014-02-19T11:07:45+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;The weird problem when using guard&lt;/h2&gt;

&lt;p&gt;I have recently encounter a problem: when using guard to watch file changes,
and run tasks automatically, they run multiple times, or remove the result.
&lt;a href="https://github.com/netzpirat/guard-coffeescript/issues/28"&gt;Some similiar issues on github&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Fix the problem or avoid it&lt;/h2&gt;

&lt;p&gt;It seems the problem may be caused by editor, OS, or some gems, I have tried
some time, but can&amp;rsquo;t find a solution. All I need is just run some task
automatically when file changes. So I try this rubygem:
&lt;a href="https://github.com/adamsanderson/when-files-change"&gt;when-files-change&lt;/a&gt; It
should be simpler than Guard, and I don&amp;rsquo;t need to write config file, just type:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
when-files-change -- rake &lt;span class="nb"&gt;test
&lt;/span&gt;when-files-change --ignore &lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt; -- make
&lt;/pre&gt;
&lt;p&gt;That is all. I can leave the task run by itself without manually invoke them.&lt;/p&gt;

&lt;h2&gt;Guard come back to work&lt;/h2&gt;

&lt;p&gt;When I create a new project later, some guard tasks run normally. Maybe my
previous problem is caused by some rubygem dependencies.&lt;/p&gt;

&lt;h2&gt;Other solutions that run tasks from vim by key mappings&lt;/h2&gt;

&lt;h3&gt;use tmux to run tasks asynchronously&lt;/h3&gt;

&lt;p&gt;create a new tmux session:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
tmux new-session -n development
&lt;/pre&gt;
&lt;p&gt;tmux can send keys to another pane like&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
tmux send-keys -t development.1 &lt;span class="s2"&gt;&amp;quot;echo test&amp;quot;&lt;/span&gt; C-m
tmux send-keys -t development.1 &lt;span class="s2"&gt;&amp;quot;rake&amp;quot;&lt;/span&gt; C-m
&lt;/pre&gt;
&lt;h3&gt;use fifo or pipe to run tasks:&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mkfifo &lt;span class="nb"&gt;test&lt;/span&gt;-commands

&lt;span class="k"&gt;in &lt;/span&gt;one screen: cat &lt;span class="nb"&gt;test&lt;/span&gt;-commands
&lt;span class="k"&gt;in &lt;/span&gt;another screen: &lt;span class="nb"&gt;echo test&lt;/span&gt;-commands
&lt;/pre&gt;
&lt;p&gt;So now we can use the fifo/pipe to send the command over.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;sh -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="nb"&gt;test&lt;/span&gt;-commands&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;to make it run forever:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;; &lt;span class="k"&gt;do &lt;/span&gt;sh -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="nb"&gt;test&lt;/span&gt;-commands&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;use vim mapping to run the command on current file, silently through the shortcut, and redraw:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;remap &amp;lt;leader&amp;gt;E :w&lt;span class="se"&gt;\|&lt;/span&gt;:silent !echo &lt;span class="s2"&gt;&amp;quot;bundle exec ruby %&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="nb"&gt;test&lt;/span&gt;-commands&amp;lt;cr&amp;gt;&lt;span class="se"&gt;\|&lt;/span&gt;:redraw!&amp;lt;cr&amp;gt;
&lt;/pre&gt;
&lt;p&gt;write a run-test.sh to avoid create the fifo manually, because fifo can&amp;rsquo;t check into git repository:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -p &lt;span class="nb"&gt;test&lt;/span&gt;-commands &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then
  &lt;/span&gt;mkfifo &lt;span class="nb"&gt;test&lt;/span&gt;-commands
&lt;span class="k"&gt;fi

while &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;; &lt;span class="k"&gt;do
  &lt;/span&gt;sh -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="nb"&gt;test&lt;/span&gt;-commands&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>在android上创建chrome app</title>
    <link rel="alternate" href="http://blog.url.com/2014/02/01/android-chrome-app/"/>
    <id>http://blog.url.com/2014/02/01/android-chrome-app/</id>
    <published>2014-02-01T15:35:00Z</published>
    <updated>2014-02-19T11:08:02+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Why not just using phonegap to build the mobile app&lt;/h2&gt;

&lt;p&gt;Because setup phonegap toolchain takes more time, while &lt;a href="https://github.com/MobileChromeApps/mobile-chrome-apps"&gt;cca&lt;/a&gt; is much faster. Further more, it can make use of chrome api.&lt;/p&gt;

&lt;h2&gt;installation&lt;/h2&gt;

&lt;p&gt;sudo npm install -g cca&lt;/p&gt;

&lt;h2&gt;create project&lt;/h2&gt;

&lt;p&gt;cca create test &amp;ndash;android&lt;/p&gt;

&lt;h2&gt;deploy on the phone&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;cca build android&lt;/li&gt;
&lt;li&gt;cca run android &amp;ndash;device&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
