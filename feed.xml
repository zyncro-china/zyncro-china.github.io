<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-03-18T01:53:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Deploy R application to shinyapps.io</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/18/deploy-r-application-to-shinyapps-io/"/>
    <id>http://blog.url.com/2014/03/18/deploy-r-application-to-shinyapps-io/</id>
    <published>2014-03-18T01:53:00Z</published>
    <updated>2014-03-18T22:01:07+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;An R hosting Service&lt;/h2&gt;

&lt;p&gt;Today I got an invitation for ShinyApps.io testing. This seems to be very
useful because other PaaS like Heroku not allowing install R.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;Just follow the guide from
https://github.com/rstudio/shinyapps/blob/master/guide/guide.mdhttps://github.com/rstudio/shinyapps/blob/master/guide/guide.md&lt;/p&gt;

&lt;h2&gt;run the App&lt;/h2&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shiny&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;h2&gt;Trouble Shooting&lt;/h2&gt;

&lt;p&gt;When the first time I deploy my apps, it always returns: &lt;/p&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;deployApp&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Preparing to deploy application...Error: /v1/applications/ 400 - Bad Request
&lt;/pre&gt;
&lt;p&gt;Finally I found that it is because my project directory is used as the app
name, so change it to something else make it works.&lt;/p&gt;

&lt;h2&gt;Multiple pages solution&lt;/h2&gt;

&lt;p&gt;Shiny App only support Single Page Application workflow, but there is some
discussion for multiple pages:
https://groups.google.com/forum/#!searchin/shiny-discuss/multiple/shiny-discuss/GAiZ4m13EHY/yKpkqmv9QuMJ&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Try bluemix android SDK with jruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/17/try-bluemix-android-sdk-with-jruby/"/>
    <id>http://blog.url.com/2014/03/17/try-bluemix-android-sdk-with-jruby/</id>
    <published>2014-03-17T08:41:00Z</published>
    <updated>2014-03-19T13:01:18+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Install the SDK&lt;/h2&gt;

&lt;h3&gt;Create the project&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
ruboto gen app -t 14 --package org.ruboto.example.bluemix
&lt;/pre&gt;
&lt;h3&gt;Download SDK&lt;/h3&gt;

&lt;p&gt;The Web page javascript failed to download in Chrome browser, but open the
console, and you can see the download link is:
http://mbaas-catalog.ng.bluemix.net/sdk/ibm-baas-sdk-android.zip&lt;/p&gt;

&lt;h3&gt;copy all jars into libs directory&lt;/h3&gt;

&lt;h3&gt;copy the configuration.json to libs or assets dirtctory?&lt;/h3&gt;

&lt;p&gt;then add the application id into configuraton.json&lt;/p&gt;

&lt;h3&gt;import in the ruby source code&lt;/h3&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="c1"&gt;#in xx_activity.rb&lt;/span&gt;
&lt;span class="n"&gt;java_import&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="nf"&gt;.ibm.mobile.services.data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;IBMDataException&lt;/span&gt;
&lt;span class="n"&gt;java_import&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="nf"&gt;.ibm.mobile.services.data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;IBMDataObject&lt;/span&gt;
&lt;span class="n"&gt;java_import&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="nf"&gt;.ibm.mobile.services.data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;IBMObjectResult&lt;/span&gt;
&lt;span class="n"&gt;java_import&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="nf"&gt;.ibm.mobile.services.data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;IBMQuery&lt;/span&gt;
&lt;span class="n"&gt;java_import&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="nf"&gt;.ibm.mobile.services.data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;IBMQueryResult&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;Usage of the classes&lt;/h3&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;IBMDataObject&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;record&amp;#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;Upload data using Rest way&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
 curl -v
 &lt;span class="s2"&gt;&amp;quot;https://mobile.ng.bluemix.net/data/rest/v1/apps/{app_id}/uploads&amp;quot;&lt;/span&gt; -X POST -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;[{&amp;quot;className&amp;quot;: &amp;quot;MyPeople&amp;quot;,&amp;quot;objectId&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;name&amp;quot;:&amp;quot;BBB&amp;quot;}}]&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Run microsoft window virtual machine for free</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/16/run-microsoft-window-virtual-machine-for-free/"/>
    <id>http://blog.url.com/2014/03/16/run-microsoft-window-virtual-machine-for-free/</id>
    <published>2014-03-16T13:28:00Z</published>
    <updated>2014-03-17T09:29:46+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;My laptop run linux but still need windows&lt;/h2&gt;

&lt;p&gt;Although I am not using windows in development and other daily job. I still
need to be able to use windows some times. But I don&amp;rsquo;t want to pay for the
windows. And I don&amp;rsquo;t want to use some cracked windows that may contains virus
or other malware.&lt;/p&gt;

&lt;h2&gt;Install a official VM legally&lt;/h2&gt;

&lt;p&gt;This &lt;a href="http://www.modern.ie/en-us/virtualization-tools#downloads"&gt;site&lt;/a&gt; provide
VM images for windows OS, for testing the IE. So I download the windows OS here
and don&amp;rsquo;t have to worry too much about the virus or malware problems.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Record terminal session using asciinema</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/14/record-terminal-session-using-asciinema/"/>
    <id>http://blog.url.com/2014/03/14/record-terminal-session-using-asciinema/</id>
    <published>2014-03-14T09:09:00Z</published>
    <updated>2014-03-12T17:28:22+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;My IDE is based on the Terminal&lt;/h2&gt;

&lt;h2&gt;Install asciinema&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;
sudo pip install --upgrade asciinema
&lt;/pre&gt;
&lt;h2&gt;Usage&lt;/h2&gt;

&lt;h3&gt;Authenticate yourself&lt;/h3&gt;

&lt;p&gt;In order to be able to delete or edit your terminal screencast, it require to
login first. Use the below command and follow the instructions. &lt;/p&gt;
&lt;pre class="highlight shell"&gt;
asciinema auth
&lt;/pre&gt;
&lt;h3&gt;Start to record the session&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
asciinema
&lt;/pre&gt;
&lt;h3&gt;To embed a terminal screencast in a page&lt;/h3&gt;

&lt;p&gt;We can embed a screencast using javascript as below:&lt;/p&gt;

&lt;script type="text/javascript" src="https://asciinema.org/a/4348.js"
id="asciicast-4348" async&gt;&lt;/script&gt;
</content>
  </entry>
  <entry>
    <title>Update time for raspberry pi</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/13/update-time-for-raspberry-pi/"/>
    <id>http://blog.url.com/2014/03/13/update-time-for-raspberry-pi/</id>
    <published>2014-03-13T04:53:00Z</published>
    <updated>2014-03-12T14:55:58+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;The date problem&lt;/h2&gt;

&lt;p&gt;The raspberry pi doesn&amp;rsquo;t has a real time clock, so every time start the
raspberry pi, we have to resest the time.&lt;/p&gt;

&lt;h2&gt;manually set the time from ntp server&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;sudo /etc/init.d/ntp stop
sudo ntpdate 1.cn.pool.ntp.org
&lt;/pre&gt;
&lt;h2&gt;Solution 2: set the ntp server&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="c"&gt;# in /etc/ntp.conf&lt;/span&gt;

server 1.cn.pool.ntp.org
server 1.asia.pool.ntp.org
server 2.asia.pool.ntp.org

&lt;/pre&gt;
&lt;h2&gt;Solution 3: setup the RTC module&lt;/h2&gt;

&lt;p&gt;When using the ntp server, it still delay some time after power up the board.
So I try to make use of the RTC module bought online.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Delegate in ruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/12/delegate-in-ruby/"/>
    <id>http://blog.url.com/2014/03/12/delegate-in-ruby/</id>
    <published>2014-03-12T03:03:00Z</published>
    <updated>2014-03-12T12:51:36+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Serveral ways to delegate in Ruby&lt;/h2&gt;

&lt;p&gt;There are serveral ways to delegate in Ruby:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SimpleDelegator&lt;/li&gt;
&lt;li&gt;DelegateClass&lt;/li&gt;
&lt;li&gt;Delegator&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;SimpleDelegator&lt;/h3&gt;

&lt;p&gt;A concrete implementation of Delegator, this class provides the means to
delegate all supported method calls to the object passed into the constructor
and even to change the object being delegated to at a later time with
#__setobj__.&lt;/p&gt;

&lt;p&gt;When using SimpleDelegator, the delegator is passed in the initalize method of SimpleDelegator Class,&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;delegate&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;MyArray&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;SimpleDelegator&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;myarray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MyArray&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;DelegateClass&lt;/h3&gt;

&lt;p&gt;There are 2 steps&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;pass the DelegateTo Class in class definition&lt;/li&gt;
&lt;li&gt;call super(obj_of_ClassToDelegateTo in the initialize method&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;DelegateClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ClassToDelegateTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Step 1&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_of_ClassToDelegateTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# Step 2&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;Delegator&lt;/h3&gt;

&lt;p&gt;We can define a customized delegator like SimpleDelegator&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;SimpleDelegator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Delegator&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;                  &lt;span class="c1"&gt;# pass obj to Delegator constructor, required&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="c1"&gt;# store obj for future use&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;__getobj__&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="c1"&gt;# return object we are delegating to, required&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;__setobj__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="c1"&gt;# change delegation object,&lt;/span&gt;
                           &lt;span class="c1"&gt;# a feature we&amp;#39;re providing&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;</content>
  </entry>
</feed>
