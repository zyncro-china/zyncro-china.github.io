<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-03-16T13:28:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Run microsoft window virtual machine for free</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/16/run-microsoft-window-virtual-machine-for-free/"/>
    <id>http://blog.url.com/2014/03/16/run-microsoft-window-virtual-machine-for-free/</id>
    <published>2014-03-16T13:28:00Z</published>
    <updated>2014-03-17T09:29:46+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;My laptop run linux but still need windows&lt;/h2&gt;

&lt;p&gt;Although I am not using windows in development and other daily job. I still
need to be able to use windows some times. But I don&amp;rsquo;t want to pay for the
windows. And I don&amp;rsquo;t want to use some cracked windows that may contains virus
or other malware.&lt;/p&gt;

&lt;h2&gt;Install a official VM legally&lt;/h2&gt;

&lt;p&gt;This &lt;a href="http://www.modern.ie/en-us/virtualization-tools#downloads"&gt;site&lt;/a&gt; provide
VM images for windows OS, for testing the IE. So I download the windows OS here
and don&amp;rsquo;t have to worry too much about the virus or malware problems.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Record terminal session using asciinema</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/14/record-terminal-session-using-asciinema/"/>
    <id>http://blog.url.com/2014/03/14/record-terminal-session-using-asciinema/</id>
    <published>2014-03-14T09:09:00Z</published>
    <updated>2014-03-12T17:28:22+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;My IDE is based on the Terminal&lt;/h2&gt;

&lt;h2&gt;Install asciinema&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;
sudo pip install --upgrade asciinema
&lt;/pre&gt;
&lt;h2&gt;Usage&lt;/h2&gt;

&lt;h3&gt;Authenticate yourself&lt;/h3&gt;

&lt;p&gt;In order to be able to delete or edit your terminal screencast, it require to
login first. Use the below command and follow the instructions. &lt;/p&gt;
&lt;pre class="highlight shell"&gt;
asciinema auth
&lt;/pre&gt;
&lt;h3&gt;Start to record the session&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
asciinema
&lt;/pre&gt;
&lt;h3&gt;To embed a terminal screencast in a page&lt;/h3&gt;

&lt;p&gt;We can embed a screencast using javascript as below:&lt;/p&gt;

&lt;script type="text/javascript" src="https://asciinema.org/a/4348.js"
id="asciicast-4348" async&gt;&lt;/script&gt;
</content>
  </entry>
  <entry>
    <title>Update time for raspberry pi</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/13/update-time-for-raspberry-pi/"/>
    <id>http://blog.url.com/2014/03/13/update-time-for-raspberry-pi/</id>
    <published>2014-03-13T04:53:00Z</published>
    <updated>2014-03-12T14:55:58+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;The date problem&lt;/h2&gt;

&lt;p&gt;The raspberry pi doesn&amp;rsquo;t has a real time clock, so every time start the
raspberry pi, we have to resest the time.&lt;/p&gt;

&lt;h2&gt;manually set the time from ntp server&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;sudo /etc/init.d/ntp stop
sudo ntpdate 1.cn.pool.ntp.org
&lt;/pre&gt;
&lt;h2&gt;Solution 2: set the ntp server&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="c"&gt;# in /etc/ntp.conf&lt;/span&gt;

server 1.cn.pool.ntp.org
server 1.asia.pool.ntp.org
server 2.asia.pool.ntp.org

&lt;/pre&gt;
&lt;h2&gt;Solution 3: setup the RTC module&lt;/h2&gt;

&lt;p&gt;When using the ntp server, it still delay some time after power up the board.
So I try to make use of the RTC module bought online.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Delegate in ruby</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/12/delegate-in-ruby/"/>
    <id>http://blog.url.com/2014/03/12/delegate-in-ruby/</id>
    <published>2014-03-12T03:03:00Z</published>
    <updated>2014-03-12T12:51:36+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Serveral ways to delegate in Ruby&lt;/h2&gt;

&lt;p&gt;There are serveral ways to delegate in Ruby:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SimpleDelegator&lt;/li&gt;
&lt;li&gt;DelegateClass&lt;/li&gt;
&lt;li&gt;Delegator&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;SimpleDelegator&lt;/h3&gt;

&lt;p&gt;A concrete implementation of Delegator, this class provides the means to
delegate all supported method calls to the object passed into the constructor
and even to change the object being delegated to at a later time with
#__setobj__.&lt;/p&gt;

&lt;p&gt;When using SimpleDelegator, the delegator is passed in the initalize method of SimpleDelegator Class,&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;delegate&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;MyArray&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;SimpleDelegator&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;myarray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MyArray&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;DelegateClass&lt;/h3&gt;

&lt;p&gt;There are 2 steps&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;pass the DelegateTo Class in class definition&lt;/li&gt;
&lt;li&gt;call super(obj_of_ClassToDelegateTo in the initialize method&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;DelegateClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ClassToDelegateTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Step 1&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_of_ClassToDelegateTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# Step 2&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;Delegator&lt;/h3&gt;

&lt;p&gt;We can define a customized delegator like SimpleDelegator&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;
&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;SimpleDelegator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Delegator&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;                  &lt;span class="c1"&gt;# pass obj to Delegator constructor, required&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="c1"&gt;# store obj for future use&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;__getobj__&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="c1"&gt;# return object we are delegating to, required&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;__setobj__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@delegate_sd_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="c1"&gt;# change delegation object,&lt;/span&gt;
                           &lt;span class="c1"&gt;# a feature we&amp;#39;re providing&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Using R in web development</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/11/using-r-in-web-development/"/>
    <id>http://blog.url.com/2014/03/11/using-r-in-web-development/</id>
    <published>2014-03-11T05:47:00Z</published>
    <updated>2014-03-11T21:45:45+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Statistic Tool: R&lt;/h2&gt;

&lt;p&gt;I have been want to use R in my work for a long time. But seem it is not so
easy to combine it into the normal work flow very easily.&lt;/p&gt;

&lt;h2&gt;Now we have a web development using R and Bootstrap: Shiny&lt;/h2&gt;

&lt;p&gt;Shiny seems would be very useful for rapid development for some web project.&lt;/p&gt;

&lt;p&gt;I can pass all the statistic job to R, which is more suitable for it, then
I can develop other business logic in javascript. And maybe I can learn some
statistic knowledges by using R. That is great!&lt;/p&gt;

&lt;h2&gt;Shiny setup&lt;/h2&gt;

&lt;p&gt;Shiny is a package in R. So to install shiny:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
install.packages&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;shiny&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Then in a directory, prepare 2 R files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ui.R&lt;/li&gt;
&lt;li&gt;server.R&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Bootstrap2.3.2 components and other libs&lt;/h3&gt;

&lt;p&gt;According to the source, shiny integrate following javascript libs:&lt;/p&gt;
&lt;pre class="highlight text"&gt;
▾ inst/
  ▾ www/
    ▾ shared/
      ▸ bootstrap/
      ▸ datatables/
      ▸ datepicker/
      ▸ font-awesome/
      ▸ highlight/
      ▸ jqueryui/
      ▸ selectize/
      ▸ showdown/
      ▸ slider/
        jquery.js
&lt;/pre&gt;
&lt;p&gt;Shiny use Bootstrap2.3.2. And it is very easy to use the components available.&lt;/p&gt;

&lt;p&gt;In ui.R:&lt;/p&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;shinyUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pageWithSidebar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;headerPanel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Minimal Example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;sidebarPanel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
               &lt;span class="n"&gt;textInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;comment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Say&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
  &lt;span class="n"&gt;mainPanel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;This is you saying it&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;textOutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;textDisplay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that we use headerPanel, sidebarPanel and mainPanel, they are defined in R/bootstrap.R . And there are more UI componts defined in that file.&lt;/p&gt;

&lt;p&gt;In server.R, we will update the output:&lt;/p&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shiny&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;shinyServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;textDisplay&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;renderText&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You said &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; there are &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; characters in this.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It does 2 things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;gives the output name: testDisplay&lt;/li&gt;
&lt;li&gt;it tells shiny that the content contained whthin is reactive&lt;/li&gt;
&lt;li&gt;paste0 links strings without spaces&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;run gist&lt;/h3&gt;
&lt;pre class="highlight text"&gt;
&amp;gt; runGist(1233456)
&lt;/pre&gt;
&lt;h3&gt;show all widgets&lt;/h3&gt;
&lt;pre class="highlight text"&gt;
&amp;gt; runGist(6571951)
&lt;/pre&gt;
&lt;h3&gt;more about reactivity&lt;/h3&gt;

&lt;p&gt;To understand the reactive programming used in Shiny, I need to read the &lt;a href="http://rstudio.github.io/shiny/tutorial/#reactivity-overview"&gt;Shiny
tutorial page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are 3 kinds of objects in reactive programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reactive source&lt;/li&gt;
&lt;li&gt;Reactive conductor&lt;/li&gt;
&lt;li&gt;Reactive endpoint&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the simple case, we only need Reactive source and the Reactive endpoint. But
in the case that we don&amp;rsquo;t want to calculate the same middle result several
times, we can use Rective conductor. The following is an example for fib():&lt;/p&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="m"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;shinyServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;currentFib&lt;/span&gt;         &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;reactive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;nthValue&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;renderText&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;currentFib&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;nthValueInv&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;renderText&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;currentFib&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;More notes for reactive object&lt;/h3&gt;

&lt;p&gt;We can&amp;rsquo;t access the reactive value or expressions from outside a reactive
context.&lt;/p&gt;

&lt;p&gt;The following code can&amp;rsquo;t work:&lt;/p&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;shinyServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# Will give error
&lt;/span&gt;  &lt;span class="n"&gt;currentFib&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;nthValue&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;renderText&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;currentFib&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;But we can define a function, then call it in the reactive world:&lt;/p&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;shinyServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;# OK, as long as this is called from the reactive world:
&lt;/span&gt;  &lt;span class="n"&gt;currentFib&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;nthValue&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;renderText&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;currentFib&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;Reactive object implementation&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Reactive values are an implementation of Reactive sources; that is, 
they are an implementation of that role.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reactive expressions are an implementation of Reactive conductors. They can
access reactive values or other reactive expressions, and they return a value.&lt;/p&gt;

&lt;p&gt;A reactive expressions can be useful for caching the results of any procedure that happens in response to user input, including:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;accessing a database&lt;/li&gt;
&lt;li&gt;reading data from a file&lt;/li&gt;
&lt;li&gt;downloading data over the network&lt;/li&gt;
&lt;li&gt;performing an expensive computation&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Observers are an implementation of Reactive endpoints. They can access
reactive sources and reactive expressions, and they don’t return a value;
they are used for their side effects.&lt;/p&gt;

&lt;h2&gt;manipulate CSV&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;import CSV into data frame&lt;/h3&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;read.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;simulation1.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;query&lt;/h3&gt;
&lt;pre class="highlight r"&gt;&lt;span class="n"&gt;league_table&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;league_table&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;home_wins&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;merge&lt;/h3&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;league&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;league_table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;sorting&lt;/h3&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;league&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;league&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pts&lt;/span&gt;&lt;span class="p"&gt;),])&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;insert more rows&lt;/h3&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;league&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;league&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pts&lt;/span&gt;&lt;span class="p"&gt;),]),&lt;/span&gt; &lt;span class="n"&gt;another_table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h3&gt;format date string&lt;/h3&gt;
&lt;pre class="highlight r"&gt;
&lt;span class="n"&gt;alldates&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sent_data&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y-%m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h2&gt;user login&lt;/h2&gt;

&lt;p&gt;We should be able to use nginx or apach to do the http basic authentication,
then foward the request to local Shiny server&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>No Backend Development</title>
    <link rel="alternate" href="http://blog.url.com/2014/03/09/no-backend-development/"/>
    <id>http://blog.url.com/2014/03/09/no-backend-development/</id>
    <published>2014-03-09T02:38:00Z</published>
    <updated>2014-03-10T10:23:58+08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Backend As A Service&lt;/h2&gt;

&lt;p&gt;Recently I have used some Backend As A Service(BaaS) platform to make the
development faster. How can it be faster than not doing. So for some very small
demos, I tried firebase. It seems good. Only one thing is missing, it dont
support to store an array. So everything must be an object.&lt;/p&gt;

&lt;h2&gt;Find an alternative solution&lt;/h2&gt;

&lt;p&gt;In order to achieve the following goal, I want to find another firebase like
platform.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Support array&lt;/li&gt;
&lt;li&gt;Can be privately hosted in own machines&lt;/li&gt;
&lt;li&gt;Can also hosted on some popular PaaS platform like heroku&lt;/li&gt;
&lt;li&gt;Open source project that we can dig into the code when we need&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I found the deployd is good, and although there is some issues when I issue
some commands in the console. But other things works well at the first glance.&lt;/p&gt;

&lt;h2&gt;Deploy on heroku&lt;/h2&gt;

&lt;p&gt;Heroku is so wonderful platform that we can verify some idea very quickly by
deploy a demo without any budget.&lt;/p&gt;

&lt;p&gt;Following is how to deploy deployd on heroku&lt;/p&gt;

&lt;h3&gt;setup a new heroku app&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
heroku apps:create myawesomedeployd

&lt;/pre&gt;
&lt;p&gt;Next, add mongodb resource&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
 heroku addons:add mongolab
&lt;/pre&gt;
&lt;p&gt;Add heroku config files and the node.js script&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
&lt;span class="c"&gt;# Procfile&lt;/span&gt;
web: node server

&lt;/pre&gt;&lt;pre class="highlight javascript"&gt;
&lt;span class="c1"&gt;// package.json 
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;app_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Super awesome app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;homepage&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;contributors&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;deployd&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;= 0&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;node server&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;engines&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;node&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.8.x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;npm&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;1.2.x&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// server.js 
&lt;/span&gt;
&lt;span class="c1"&gt;// require deployd
&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;deployd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;deployd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// configure database etc. 
&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;deployd&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;host.mongolab.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33559&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;heroku_app&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;heroku_app&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// heroku requires these settings for sockets to work
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xhr-polling&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// start the server
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// debug
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Server is listening on port: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Deployd requires this
&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Give the server a chance to return an error
&lt;/span&gt;    &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;/pre&gt;
&lt;h3&gt;generate the keys for deployd&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mkdir .dpd
touch .dpd/.gitemptydir
git add .dpd/.gitemptydir
dpd keygen
dpd showkey

&lt;/pre&gt;
&lt;h3&gt;create a resource directory to avoid node.js error&lt;/h3&gt;

&lt;p&gt;When running deployd, it could report:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
deployd Error: ENOENT, readdir &lt;span class="s1"&gt;&amp;#39;resources&amp;#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Just need to commit an empty directory to avoid this error&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
mkdir resources
touch resources/.gitemptydir
git add &lt;span class="k"&gt;*&lt;/span&gt;
git reset node_modules
git commit -m &lt;span class="s1"&gt;&amp;#39;add resources/\n&amp;#39;&lt;/span&gt;

&lt;/pre&gt;
&lt;h3&gt;Deploy to Heroku&lt;/h3&gt;

&lt;p&gt;Now just push to heroku&lt;/p&gt;
&lt;pre class="highlight shell"&gt;
git push origin master
&lt;/pre&gt;
&lt;p&gt;Then access from http://herokuhost.com/dashboard&lt;/p&gt;

&lt;h3&gt;Connect to mongolab to check the data:&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;
mongo -u heroku_app2239 -p password_str --port 3355 --host
ds033.mongolab.com heroku_app2239
&lt;/pre&gt;</content>
  </entry>
</feed>
